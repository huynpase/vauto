[http://vauto.googlecode.com/files/StockMarket.zip Download Source] - [http://vauto.googlecode.com/files/StockMarketVacs.zip Download VACS]

===Pre-requisite===
  * Vibz Automation Framework. [http://code.google.com/p/vauto/downloads/list?can=3&q=&colspec=Filename+Summary+Uploaded+Size+DownloadCount Download here]

===Description===
The source files can be viewed through Vibz Automation Studio or in any editor. The source contains project files, a script folder and a suite folder. Script folder is where you can find the case file and identifier files. Suite folder contains the test suite file. There is a bin/Debug in the source folder which has compiled script (VACS) file.<br/>
The Vacs (Vibz automation compiled script), is portable, self contained executable file that can be executed on any remote machine where Vibz Automation framework (VAF) is installed.<br/>
Lets see the code in detail;<br/> 
  * <b>Case file</b>
    * Function <b>GetStockDetailedData</b>.
    {{{
  <function name="GetStockDetailedData">
    <include id="case1.id"></include>
    <data>
	<var name="url"></var>
	<var name="comp_name"></var>
	<var name="result" type="datatable"></var>
    </data>
    <body>
	<openurl url="@url"/>
	<set var="comp_name" value="@comp_name" />
	<getattribute locator="$perfImgLoc" assignto="perfImgLoc" />
	<invoke assignto="index1" method="@perfImgLoc.lastindexof(/)" />
	<set var="index1" value="parse(sum(@index1,1))" />
	<invoke assignto="index2" method="@perfImgLoc.lastindexof(.)" />
	<set var="length" value="parse(substract(@index2,@index1))" />
	<invoke method="@perfImgLoc.substring(@index1, @length)" assignto="abc" />			
	<getattribute locator="$iframeLoc" assignto="iframeSrc" />
	<openurl url="@iframeSrc" />
	<getinnertext locator="$curVal" assignto="curVal" />
	<getinnertext locator="$changeVal" assignto="changeVal" />
	<getinnertext locator="$perchangeVal" assignto="perchangeVal" />
	<invoke method="@result.AddRow(@comp_name,@curVal, @changeVal,@perchangeVal , @abc)" />
    </body>
  </function>
    }}}

    * Function <b>ProcessSourceStocks</b>.
    {{{
  <function name="ProcessSourceStocks">
    <include id="case1.id"></include>
    <data>
	<var name="url"></var>
	<var name="stockSource" type="datatable"></var>
	<var name="dataDestination" type="datatable"></var>
    </data>
    <body>
	<define var="result" type="datatable" />
	<for count="@stockSource.rowcount">
        	<body>
			<call name="GetStockDetailedData">
        			<data>
			        	<var name="url">parse(replace(replace(@url, {comp_name},@stockSource[@index][0] ), {comp_code},@stockSource[@index][1] ))</var>
			        	<var name="comp_name">@stockSource[@index][0]</var>
					<var name="result">@result</var>
        			</data>
      			</call>
	        </body>
      	</for>
	<export destination="@dataDestination" source="@result" mode="update"/>
    </body>
  </function>
    }}}

    * Function <b>ProcessAllStocks</b>.
    {{{
  <function name="ProcessAllStocks">
    <include id="case1.id"></include>
    <data>
	<var name="url"></var>
	<var name="mode">insert</var>
	<var name="dataDestination" type="datatable"></var>
    </data>
    <body>
	<openurl url="@url" onerror="continue"/>
	<gettablecontent repeaterxpath="$repeaterXPath" columnxpathset="$columnXPathSet" xpathseperator="$xPathSeperator" assignto="data" onerror="continue"/>
	<define var="result" type="datatable" />
	<for count="@data.rowcount">
        	<body>
			<call name="GetStockDetailedData" onerror="continue">
        			<data>
			        	<var name="url">@data[@index][3]</var>
			        	<var name="comp_name">@data[@index][0]</var>
					<var name="result">@result</var>
        			</data>
      			</call>
	        </body>
      	</for>
	<export destination="@dataDestination" source="@result" mode="@mode"/>
    </body>
  </function>
    }}}
<br/>
  * <b>Identifier file</b>
    {{{
<controls xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	 <control name="repeaterXPath"><![CDATA[//table[@class='dataTable']/tbody/tbody/tr]]></control>
	 <control name="columnXPathSet"><![CDATA[{td[1]/a/text()}{td[4]/text()}{td[5]/font/text()}{td[1]/a/@href}]]></control>
	 <control name="xPathSeperator"><![CDATA[{,}]]></control>
	 <control name="iframeLoc"><![CDATA[//iframe[@id='current']/@src]]></control>
	 <control name="curVal"><![CDATA[//span[@id='ltpid']]]></control>
	 <control name="changeVal"><![CDATA[//span[@id='change']]]></control>
	 <control name="perchangeVal"><![CDATA[//span[@id='ChangePercent']]]></control>
	 <control name="perfImgLoc"><![CDATA[//img[@width='154' and @height='89']/@src]]></control>
</controls>
}}}
<br/>
  * <b>Suite file</b>
    * <b>CompanyUpdate.ts</b>
    {{{
<function name="ProcessSourceStocks" ref="Script/case1/ProcessSourceStocks">
    <data>
      <var name="url" source="Internal" type="Scalar">http://money.rediff.com/companies/{comp_name}/{comp_code}</var>
      <var name="stockSource" source="text" type="datatable">
        <param name="path">parse(concat(__currentpath,/company.txt))</param>
        <param name="rowseperationchar">parse(__newline)</param>
        <param name="colseperationchar">parse(__tab)</param>
      </var>
      <var name="dataDestination" source="text" type="datatable">
        <param name="path">parse(concat(__currentpath,/data.txt))</param>
        <param name="rowseperationchar">parse(__newline)</param>
        <param name="colseperationchar">parse(__tab)</param>
      </var>
    </data>
  </function>
    }}}

    * <b>AllCompanyDetailedReport.ts</b>
    {{{
 <function name="ProcessAllStocks" ref="Script/case1/ProcessAllStocks">
    <data>
      <var name="url" source="Internal" type="Scalar">
        <Value><![CDATA[http://money.rediff.com/gainers/bse/daily/groupa]]></Value>
      </var>
      <var name="mode" source="Internal" type="Scalar">
        <Value><![CDATA[update]]></Value>
      </var>
      <var name="dataDestination" source="text" type="datatable">
        <param name="path">parse(concat(__currentpath,/CompanyDetailedReport.txt))</param>
        <param name="rowseperationchar">parse(__newline)</param>
        <param name="colseperationchar">parse(__tab)</param>
        <Value><![CDATA[]]></Value>
      </var>
    </data>
  </function>
  <function name="ProcessAllStocks" ref="Script/case1/ProcessAllStocks">
  ...
    }}}
===Output===
Above example collects stock data from host site.
<br/>

===You may need to know===
  * [http://code.google.com/p/vauto/wiki/BuildingTestSuite What happens when suite file is compiled.]
  * [http://code.google.com/p/vauto/wiki/Examples Other Examples]