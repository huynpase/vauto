<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZlnZFKakw8JoOSQAAAAAAAAAAAAAAAAAAAAAAAAA///4P///AAD//4AD//8AAP/8AAB//wAA//AAAB//
        AAD/4AAAD/8AAP/AAAAD/wAA/wAAAAP/AAD+AAAAAf8AAPwAAAAA/wAA+AAAAAB/AADwAAAAAD8AAPAA
        AAAAHwAA4AAAAAAPAADgAAAAAAcAAMAAAAAABwAAwAAAAAADAACAAAAAAAMAAIAAAAAAAwAAAAAAAAAB
        AAAAAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAMAAIAAAAAAAwAAgAAAAAAD
        AACAAAAAAAcAAMAAAAAABwAAwAAAAAAPAADgAAAAAA8AAPAAAAAAHwAA8AAAAAA/AAD4AAAAAH8AAPwA
        AAAA/wAA/gAAAAH/AAD/AAAAA/8AAP/AAAAP/wAA/+AAAD//AAD/+AAA//8AAP//AAf//wAA
</value>
  </data>
</root>