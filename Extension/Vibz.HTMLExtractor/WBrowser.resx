<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZlnZz6a4ocJoOSRyruIAAAAAAAAAAAAAAAAAAAAA//8AAP//AAD//AAAP/8AAP/wAAAP/wAA/8AAAAP/
        AAD/gAAAAf8AAP4AAAAAfwAA/AAAAAA/AAD4AAAAAB8AAPAAAAAAHwAA8AAAAAAPAADgAAAAAAcAAOAA
        AAAABwAAwAAAAAADAADAAAAAAAMAAIAAAAAAAQAAgAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAQAAgAAAAAAB
        AACAAAAAAAMAAMAAAAAAAwAAwAAAAAAHAADgAAAAAAcAAPAAAAAADwAA8AAAAAAfAAD4AAAAAB8AAPwA
        AAAAPwAA/gAAAAB/AAD/AAAAAf8AAP/AAAAD/wAA/+AAAA//AAD/+AAAP/8AAP//AAD//wAA
</value>
  </data>
</root>