<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAABAxJREFUSEuVlf1P
        W1UYx7sfnf+Axt/UnzWo0bj4w4zRRYJu4MLQRnmZe4kMzOyEAQM2NrYVWJEC64Rt6HSDDQY0lHezRFxo
        LUxeRteOl2I32vJS2NrSlvev5znNrbcrJV2TT/o9z3me73Puuefeu00SwW98wgyrfVri8Xl59osvbJe8
        8vJLktdfe3VbBOXhU241qlFRfQVFZUoU/6SE8qKKc76kFMVl5VBeqkJTSyueu4mmvQuKiovMSAG1phVW
        mw2rq6vY2NjgkKYYzRUWlUDOmlNNRI0q2YrzC8+huUWDpaVlrK+vMzY4a2trAS3EKYdyc8+chepyzdZN
        ylRVOFt8AQajEavMjFhhq/X/r0FrtEFnsnMtxIU8qik4Lwd5bHoltbcakZVfgPsGA1ZWVgIsLy9zff2O
        CTt+qMf7DNJCnOYETbVZJwvwe119aJOs/NNoaFbzbRHw+ZYgkHtNiw+PN3JIi+cETXUNTc04nncquEFV
        zW84yfbd6XLB6/MF4fF6+VhvsmLfuXbEM0gLcZoTa/LIzj/FT19gq9Izc3DzdiMWPd4Q3IseHvMwnjjd
        jEU+FuLPahrXNdxGqizT32BgcBjpGVkYHZuA2+0JwuVaBFHdNgxZVU+AniELj4eDvNJ+zIRefw8SuiGy
        7BOYX3gCl9sdAl2yyTKDX7pGIJV3QFrUiY6+Cb6dQr5YU4y8jsgy/DebjlVuQSHs07OYnXXwyadOFzcQ
        09VvRoqiGymlf6CTNXjqdAbmSVMN1ZIHecmyc/xHtqRchRx2tKas9gBW27S/4ZwDDscCFlhhp34cB5V3
        OB1MO+YXMOeYx8zsHGz2GV77eMrGIX2UbTt5S+gEpR/LgHnSgkePpsLya/s/eCutllEH0uJci+Vx0Ji8
        DqSm4+q165Do9H1I3H8QvTo9JtlEOGpa+wMNSIvzzOZ/g8bkJU1KwZ93e/0nKTb+S1y6fBVj45NhudKi
        R9SRWg5pce7omJmdQj8UV7FnIG7fV/8/B8dy8pB6VMZeE0aYHo5tSrVax8xv8C0iLc4zmkYDY/LYf/g7
        kGfQOyn681hU/lwNw4OHIegHDFDU/cUbEKU374JiQu6IwQSCxuXsG7Er+rNN3kUn8hAbnwB1SxuGhw1B
        JBe38pXT9tA/kcJiQt7Q0AjXVLtnb3zo6oVLidkTh8RvD6FJrcHA4P0AN9q0qKzvCYJi4hyqSfg6CeSx
        5YcnenccYmK/QGl5JbS6PvTfG9wSylGw3E9jdrOtiYnsq5aW9j3e3fEBkg4cwoWyCmjaOtGr1eNv9m4h
        SFOM5qSJyXiP5VJNRJ9McdI3ycl4I+pt7Px4F/YmSFnDwxw61js/+gRvRr0Dynlu42cLurq7IZfL+SoJ
        0hSLxPg/IcKNN2ZLEkIAAAAASUVORK5CYII=
</value>
  </data>
</root>