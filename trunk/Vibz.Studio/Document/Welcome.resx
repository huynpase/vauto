<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAACAtJREFUaEPtmH1o
        V2UUx4O0Mo0UejMFpWAkBUJYkJKaQlka5VbRm4n+YZKlpaDYRGm+hOZ6URsqU5s6S7dZztqaE21urnxZ
        2s+26SbqnIq6l9Kp22r9Tr/PI+fXs+u9v3uTuQoaPNy7e5/nPN/vOd9zzvO71133/99lDzQ0NIiOmpoa
        scd/wkdO0Pp/dXW1/GsIVFRUGM+6AfIiwBrn/JKSEhOtnJyc9iG3aNEiwZMKMhQKXbHx3yGgcyEBmWsa
        oQ0ZGa30zOZu3gtKwHbENZeZhtoLnO05N2CssyWUn7/1CmfYtnnfptHwAqWb2uC85tpJ7OUIW1LJyclt
        RwLt+22qkoo1D8n52blmSU2lCAIATxMREpzBvV8EbVLXNJkB5OZBALJxevo6IfSzZ89uNXjGO7StJdjL
        Tptq382Y05sAR2KJiYlmADY1NVWoWgyA8x5S+h4iTjtt1ugAYHvJScJ+h6zU2wCFjFd5JHrMxz5EIGnb
        cmt0bkXCN0IAcgsvC3cUFUffAZi5eBfgfslpg7HX2iSIGPu42QpclTDil6zqeYDE0nQsUhoNIhEkyQP3
        Bq9EVTB4W3UeZOMgJCDjF8FAOQKwWIYwokkZiyjv8BjAvPKCfYLYY446CrnGzAHAxZKPVhwvjyEnJMFG
        zGFgk2deeeK0qYDtq/YSctCTAN7Hc7EIAAgwzLM3wJs8w4YmuhMARNzeMU/LrdoFsNuISUCZ2c3GJqPh
        ZjM343idDdy0qvMh4QTJfPZUgtrF9co7nOZbPt0m4HGtMlztbmqTUACxEo35EFSb9nrt4tiBoMrqqkA7
        F+lBzrmJfdYhKgBz+4Fj28OGztP1ClhtMCdwyQzCkGalZx02wYv25txrZPw0CjhsONfrc8hp9Zo8efLV
        ycZJSpuVeo8NuLcHGwMs1klSS6pedb3Kin2wgX2e2c+DOLrVHBazgXpKN1MPOQlooqknnRtSndQB2MA+
        a7YV75HM3RWysrJFkg+GJbGkRd7IPiejlp2U+HmH5eXE/TIj+UDwSGiVcALU/9lUh3pJPcZaPdABktzR
        Y7QCVg+zpuDQKck+EY6CTwqFDQmu47Nq5cXFx2XY1DLpM6JIejyYK4OfzPUnonVcwdkgbeA2EfteSTjf
        a0NT7/9c97tsPxs2AxIZx8OSUtEiK8qbDKFpBRdkdNppE4Whb/5kSHS5O1M63LRaxo/zIaL12AahXVX1
        r/rU5/ZVm5KSUW0r+MMXRBj76v6IjuyDjZJZ1iiL916S5XsvGBJE4Zk5lSYK/RJ2Su9+uXJLt8+lw/VL
        5KlhmbE7slYCN4CaH7HmuK3jGaABX3Xx8uC+7NewFJ2IRORoU1RS83dflEmb/pIRBJCREoDEKy9leZPA
        a1pZ7F9V+txOav3l5XctKK0yBGqbReoaw9ErRCDBu6IGMTICPBEgmRNmHpRxc0slafVRM0jsYeP2yPC3
        dsaOgi0FrSqalHYz0i5sS8Z5/+W3W43OAdocFjMafgubARmNRt6RRpmbX2NyYFL+RUPg6cRyA3hoQoE8
        92qhfLquyuTO9LTjcl/ccm8SXkdXnutpU786ICs37evRO23bPpOkAFUC9pWoQC61sF6QD5WIckolemJy
        yORAr77fGAn1iVsvifNKZeqC8gj4D2XWjPX+1cmu60pAo2EfzrTW22SYT2JS44trWhOorW+Uk3XNRk5Z
        u2rNPIhO2dFkJGRXIQhQhTp2XCGjxhSbnHl23HcyZsLa4AQA7TZUUs4jNOSIzvScXwwoOwqhyvOyOdRg
        tI+UIDB3b1OrZoZ8+r+2S/oM2Sa3xWVECfTv/7XkFp6R0jOXZNXm/cEIeIHXrxL2tx/t4tqZ0TKSgAS5
        gHwgQNmkZFa3iHx/9JKRD9q3e4CW0G53ro8SuOP2NTJl6l5j54fK0/4EAOlFQJ+7fczi2cSJE009t0nQ
        vEhevA8BgNMHeD5141l5fNZB08DcvI+EOt+8XJLeDxkC5SdrTf75npdikeAdBvSrnP11jlMlYCBBUuJd
        9I3eqTqQIBIAJ4mpLiQu3Zfmpcmr+ocAEUhbe8QQOHK6LhgBAHqRsNnbc7iHADIY9PqPpquSmPELjxoy
        RAXtF5Q3SNqOenPdU35etuyqk3c/Lpf7B+VFZQNwHT17pkvellOGQGnl5Q8NvhGwe4EtJ/W+23slMHDk
        dpOISAIiRAQyA98+YBpVysYTphrZpRWJrcs/KSPGFhkSdF8lQASWLT1k5ufmxfih78XKJuB2dLbzgs+I
        Y8YXmsMYHn1gWIRMRB5EhcH9wvQqU4mcPYJnyGzU/DKzDhtKom/fTTJ/fkimTVsa3Ps2WK9Pfc5kJwop
        KbvMxlQSNM1A35xvIIV0bPDaoc05KXK8+CpSpThemFJqRYJGNnbMe1dHIEh0NJmZe+896wwJ5EBH1QEp
        KgqSAbielTjo0fg21YmpUgOeL4iC14Tu0X1W24L3SyTbe3ZSck9VgYSeUAGff05M8yN3dK3Jh8jo1Okj
        mTBhTvsSSIjPbiUBJQE4zjjpWcdMWeWwhufX1IdNxbqx62dmnYLn/rHBie0LXqMz8NEvookYJRDxKHrm
        xMlxGuArq5vlnVXHpGdc5JeYA/zDD7WzdJzSGhm/3nRTW0Z4F2/zu/iDvLMyeuJu07Bs8MjmH/O8k8S8
        eTnmPA8RQA4cvk1m5tXLC5P2yK03rGoltS6dl0jvXkntr3m/pOZ9UtIGGfDIJ0JUhgzNkG5dF5sEBXT3
        uxYIcgmSrH8CUU0HItsD83oAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA9VJREFUSEu9lrFr
        42gQxfdPSZkiRYoUKUIwIQQTQnCRwkU4zOHCBBfmUGGCC3GoSKFChQqxuFDhQoU5VLgQiwqxiCAWEcQi
        ggoRUrhwsYQUW1w3O2+8nyxF9V1giInt95t535tP+fTp//jp9XqEur29pcFgIL/7/X5VNzc38v7b2xtd
        X1/T1dVVVZeXl9TtdqUuLi6kzs/P6ezsjKreZ7OZfHmz2dB6vaaXlxd6fn6mLMvo8fGRoiiiIAhagI/i
        EFbinU5nB9A0rRIvy7ISf3p6oihO6MvXbxR8zQTwh/4Pjf72aKJ/pru/dBr8OaTRaCST1cUbgLu7O+m8
        Lp58SylKvtOXx4KCuKBVnAvgVvdpYoVkLhJahiUt/JgMw6TxeEywEsKnp6dSlUXD4bBhS5KkFCb5TjzK
        yedSAI0BtpfRKnqltHinNN+QZbuERgGB+MnJyQ6Ag1Wew5K6OISX4bYUYGpH5K5yitIN5eVPKl7/ZcgP
        Mkyb0CxC0AAgMTjQOI7ZjlQ6hyVK3AsyWnApgD6PxR50D3FVYVLSeDKVJDYAGEvEA07Lb7/r4vhbVrwK
        oCjX3DmLsy118QxT8DSm48k5HB8f7ywCADH0w7jVOcTzopQGAIAF8/mc0vSJAe+UszDE4+Kn1GKVivjR
        0dEOgCXyfZ/HTsVrL9xa4nKhc4jbti0AfBn5tyxLpoFoxBVk71JevBbxBgAZ9jyPxVmYAUp8vso4vhty
        HIem06kADg8PaX9/XyCYbMWifvqDllxesi2I43NVTHHqrus2Ooe446cCQLfIOQAQ39vbk6VKs5zm0bpV
        EG8B0KXL/sEWh8VtLosBcVaKfdh2ACCODnVdl/Myg1cpq1YtAMaFx7YX1MQB2FoWp5lYCAAuMYh7fkAm
        vz9b5mT4BT2sSqnZIpbuDw4OdhbhJjRNkyO2kM633W/L9PlMwkKiCQBgiyARofE8IW2R0ZS3GiCdQSPD
        FfEWwDAM0o0HvmPChjgAqgAYOTENeJNReA3IxE0ForkJdfujNgB3OMbGta2bDpnLpBJV4g8M+gj4COlr
        Jh2fbJcMYahShEQghvf392LVzHLpYZlWEIgbbIECDH9PAMDQ2U7Sn9rU6fbkIYXYtwCTyUSiiLTMeBrN
        sEl3I1Li8LgCsKiyacA369XYEHEsrBJvAJAMPDRwDeCiUqCRNuNDc0izV+JvfYK+4VFvYlGnN6BzDgmu
        G4jjcCHeAOBywpNJPYvxYbwGCEuo7ne1ySqGEIPf+CySqIRbAPiPQ0aScAbYXCweLjXZcN4BLJsCqBjW
        f38Ub0zwX/7n8gsdFhcmYqAXcwAAAABJRU5ErkJggg==
</value>
  </data>
</root>