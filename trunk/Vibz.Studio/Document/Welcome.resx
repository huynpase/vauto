<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CoeGYAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA9VJREFUSEu9lrFr
        42gQxfdPSZkiRYoUKUIwIQQTQnCRwkU4zOHCBBfmUGGCC3GoSKFChQqxuFDhQoU5VLgQiwqxiCAWEcQi
        ggoRUrhwsYQUW1w3O2+8nyxF9V1giInt95t535tP+fTp//jp9XqEur29pcFgIL/7/X5VNzc38v7b2xtd
        X1/T1dVVVZeXl9TtdqUuLi6kzs/P6ezsjKreZ7OZfHmz2dB6vaaXlxd6fn6mLMvo8fGRoiiiIAhagI/i
        EFbinU5nB9A0rRIvy7ISf3p6oihO6MvXbxR8zQTwh/4Pjf72aKJ/pru/dBr8OaTRaCST1cUbgLu7O+m8
        Lp58SylKvtOXx4KCuKBVnAvgVvdpYoVkLhJahiUt/JgMw6TxeEywEsKnp6dSlUXD4bBhS5KkFCb5TjzK
        yedSAI0BtpfRKnqltHinNN+QZbuERgGB+MnJyQ6Ag1Wew5K6OISX4bYUYGpH5K5yitIN5eVPKl7/ZcgP
        Mkyb0CxC0AAgMTjQOI7ZjlQ6hyVK3AsyWnApgD6PxR50D3FVYVLSeDKVJDYAGEvEA07Lb7/r4vhbVrwK
        oCjX3DmLsy118QxT8DSm48k5HB8f7ywCADH0w7jVOcTzopQGAIAF8/mc0vSJAe+UszDE4+Kn1GKVivjR
        0dEOgCXyfZ/HTsVrL9xa4nKhc4jbti0AfBn5tyxLpoFoxBVk71JevBbxBgAZ9jyPxVmYAUp8vso4vhty
        HIem06kADg8PaX9/XyCYbMWifvqDllxesi2I43NVTHHqrus2Ooe446cCQLfIOQAQ39vbk6VKs5zm0bpV
        EG8B0KXL/sEWh8VtLosBcVaKfdh2ACCODnVdl/Myg1cpq1YtAMaFx7YX1MQB2FoWp5lYCAAuMYh7fkAm
        vz9b5mT4BT2sSqnZIpbuDw4OdhbhJjRNkyO2kM633W/L9PlMwkKiCQBgiyARofE8IW2R0ZS3GiCdQSPD
        FfEWwDAM0o0HvmPChjgAqgAYOTENeJNReA3IxE0ForkJdfujNgB3OMbGta2bDpnLpBJV4g8M+gj4COlr
        Jh2fbJcMYahShEQghvf392LVzHLpYZlWEIgbbIECDH9PAMDQ2U7Sn9rU6fbkIYXYtwCTyUSiiLTMeBrN
        sEl3I1Li8LgCsKiyacA369XYEHEsrBJvAJAMPDRwDeCiUqCRNuNDc0izV+JvfYK+4VFvYlGnN6BzDgmu
        G4jjcCHeAOBywpNJPYvxYbwGCEuo7ne1ySqGEIPf+CySqIRbAPiPQ0aScAbYXCweLjXZcN4BLJsCqBjW
        f38Ub0zwX/7n8gsdFhcmYqAXcwAAAABJRU5ErkJggg==
</value>
  </data>
</root>